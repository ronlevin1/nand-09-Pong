function Ball.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 512
push constant 2
call Math.divide 2
pop this 0
push constant 256
push constant 2
call Math.divide 2
push constant 16
add
pop this 1
push constant 5
pop this 2
push argument 0
pop this 3
push constant 0
pop this 4
push pointer 0
return
function Ball.isPosLegal 6
push argument 0
pop pointer 0
push this 0
push this 2
add
pop local 0
push this 0
push this 2
sub
pop local 1
push this 1
push this 2
sub
pop local 2
push this 1
push this 2
add
pop local 3
push local 1
push constant 0
gt
push local 1
or
push constant 0
eq
push local 0
or
push constant 511
eq
push local 0
or
push constant 511
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 4
goto IF_END0
label IF_FALSE0
push constant 0
pop local 4
label IF_END0
push local 2
push constant 16
gt
push local 2
or
push constant 16
eq
push local 3
or
push constant 250
lt
push local 3
or
push constant 250
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 5
goto IF_END1
label IF_FALSE1
push constant 0
pop local 5
label IF_END1
push local 4
push local 5
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
goto IF_END2
label IF_FALSE2
push constant 0
push constant 30
call Output.moveCursor 2
pop temp 0
push constant 2
call String.new 1
push constant 120
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 3
call String.new 1
push constant 32
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push constant 3
call String.new 1
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 2
call Output.printInt 1
pop temp 0
push constant 0
return
label IF_END2
function Ball.draw 0
push argument 0
pop pointer 0
push pointer 0
call Ball.isPosLegal 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push pointer 0
call Ball.isPosLegal 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.isPosLegal 1
pop temp 0
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push this 3
add
pop this 0
push this 1
push this 4
add
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.checkCollision 10
push argument 0
pop pointer 0
push this 0
push this 2
add
pop local 0
push this 0
push this 2
sub
pop local 1
push this 1
push this 2
sub
pop local 2
push this 1
push this 2
add
pop local 3
push local 0
push argument 2
call Paddle.getX 1
gt
push local 0
or
push argument 2
call Paddle.getX 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 4
goto IF_END0
label IF_FALSE0
push constant 0
pop local 4
label IF_END0
push local 2
push argument 2
call Paddle.getY 1
gt
push local 2
or
push argument 2
call Paddle.getY 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 5
goto IF_END1
label IF_FALSE1
push constant 0
pop local 5
label IF_END1
push local 3
push argument 2
call Paddle.getY 1
push argument 2
call Paddle.getHeight 1
add
lt
push local 3
or
push argument 2
call Paddle.getY 1
push argument 2
call Paddle.getHeight 1
add
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 6
goto IF_END2
label IF_FALSE2
push constant 0
pop local 6
label IF_END2
push local 4
push local 5
and
push local 6
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
return
label IF_FALSE3
push local 1
push argument 1
call Paddle.getX 1
eq
push local 1
or
push argument 1
call Paddle.getX 1
lt
push argument 1
call Paddle.getWidth 1
add
push local 1
or
push argument 1
call Paddle.getX 1
eq
push argument 1
call Paddle.getWidth 1
add
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 7
goto IF_END4
label IF_FALSE4
push constant 0
pop local 7
label IF_END4
push local 2
push argument 1
call Paddle.getY 1
gt
push local 2
or
push argument 1
call Paddle.getY 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 8
goto IF_END5
label IF_FALSE5
push constant 0
pop local 8
label IF_END5
push local 3
push argument 1
call Paddle.getY 1
push argument 1
call Paddle.getHeight 1
add
lt
push local 3
or
push argument 1
call Paddle.getY 1
push argument 1
call Paddle.getHeight 1
add
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop local 9
goto IF_END6
label IF_FALSE6
push constant 0
pop local 9
label IF_END6
push local 7
push local 8
and
push local 9
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 1
return
label IF_FALSE7
push constant 0
return
function Ball.flipVelX 0
push argument 0
pop pointer 0
push constant 10
push constant 10
call Output.moveCursor 2
pop temp 0
push constant 8
call String.new 1
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 3
push constant 1
neg
call Math.multiply 2
pop this 3
push constant 0
return
function Ball.reset 0
push argument 0
pop pointer 0
push constant 512
push constant 2
call Math.divide 2
pop this 0
push constant 256
push constant 2
call Math.divide 2
push constant 16
add
pop this 1
push this 3
neg
pop this 3
push this 4
pop this 4
push constant 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.getX 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getY 0
push argument 0
pop pointer 0
push this 1
return
