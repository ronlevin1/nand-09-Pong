class Paddle{
    // Responsibilities:
    // - Manage paddle position and movement.
    // - Ensure paddle stays within screen bounds.
    field int x;
    field int y;
    // constants
    field int height;
    field int width;
    field int gap;
    field boolean isLeft;

    //Ctor
    constructor Paddle new(boolean isLeft) {
        // constants
        let height = 256/3;
        let width = 10;
        let gap = 5;

        // vars
        let y = (256/2) - (height/2);
        if (isLeft)  { 
            let x=gap; 
        }
        else { 
            let x=512-gap-width; 
        }
        do draw();
        return this;
    }

    // move paddle according to KBD arrows press
    method void update () {
        // code
        return;
    }

    /** Moves the paddle up by 2 pixels. */
   method void moveUp() {
        // do Output.moveCursor(19, 20);
        // do Output.printString("In moveUp()");
        if (y > 16) {
            // do Output.printString(", and y>1");
            // do erase();
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y - 1, x + width, y + height);
            let y = y - 2;
            // do draw();
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + width, y + height+1);
        }
        return;
    }

    /** Moves the paddle down by 2 pixels. */
    method void moveDown() {
        // do Output.moveCursor(20, 20);
        // do Output.printString("In moveDown()");
        if ((y + height) < 250) {
            // do Output.println();
            // do Output.printString(", and (y + height) < 254");
            // do erase();
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + width, y + height + 1);
            let y = y + 2;
            // do draw();
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y - 1, x + width, y + height);
        }
        return;
    }

    /** Draws the paddle on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }

    /** erases the paddle from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
     }

    method int getX () {
        return x;
    }
    method int getY () {
        return y;
    }
    method int getHeight () {
        return height;
    }
    method int getWidth () {
        return width;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}