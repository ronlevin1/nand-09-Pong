class GameManagar{
    field Ball ball;
    field Paddle leftPaddle;
    field Paddle rightPaddle;
    field String scoreMsg;
    field int leftScore, rightScore;
    // field String leftStr, rightStr;
    field int rightDirection, leftDirection;// the paddle's current direction: 
    // 0=none, 1=up, 2=down

    //Ctor
    constructor GameManagar new () {
        let leftPaddle = Paddle.new(true);
        let rightPaddle = Paddle.new(false);
        let leftScore = 0;
        let rightScore = 0;
        let scoreMsg = "                    "; // todo
        let rightDirection = 0;
        let leftDirection = 0;

        let ball = Ball.new(1); // TODO: change velocity
        return this;
    }

    /** Runs the game: handles the user's inputs and moves the square accordingly */
    method void run() {
        var char key;  // the key currently pressed by the user
        var boolean exit;
        let exit = false;
        do displayScore();

        while (~exit) {
            do moveBall();
            // waits for a key to be pressed
            while (key = 0) {
                let rightDirection = 0;
                let leftDirection = 0;
                let key = Keyboard.keyPressed();
                do moveBall();
                do movePaddles();
            } 
            if (key = 81)  { let exit = true; }     // q key
            // left paddle
            if (key = 87) { let leftDirection = 1; }  // W key = up
            if (key = 83) { let leftDirection = 2; }  // S key = down
            // right paddle
            if (key = 131) { let rightDirection = 1; }   // up arrow
            if (key = 133) { let rightDirection = 2; }   // down arrow

            // waits for the key to be released
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
                do moveBall();
                do movePaddles();
            }
            do movePaddles();
        } // while
        return;
    }

    method void moveBall(){
        if((ball.checkOverlap(leftPaddle))){
            do ball.flipVelX();
        }
        if((ball.checkOverlap(rightPaddle))){
            do ball.flipVelX();
        }
        do ball.move();
        //TODO: check if ball is behind paddle -> score!
        do checkScore();
        return;
    }

    method void movePaddles(){
        // left
        if (leftDirection = 1) { 
            do leftPaddle.moveUp(); 
        }
        if (leftDirection = 2) { 
            do leftPaddle.moveDown(); 
        }
        // right
        if (rightDirection = 1) { do rightPaddle.moveUp(); }
        if (rightDirection = 2) { do rightPaddle.moveDown(); }
        //
        do Sys.wait(5);  // delays the next movement
        return;
    }
    
    //todo
    method void checkScore() {
        var int leftLim, rightLim;
        var boolean flag;
        let leftLim = leftPaddle.getX();
        let rightLim = rightPaddle.getX() + rightPaddle.getWidth();
        //
        if (ball.getX() < leftLim) { // Right player scores
            let rightScore = rightScore + 1;
            let flag = true;
        }
        if (ball.getX() > rightLim) { // Left player scores
            let leftScore = leftScore + 1;
            let flag = true;
        }
        if (flag) {
            do displayScore();
            do Sys.wait(150);  // delays the next movement
            do ball.erase();
            do ball.reset();
        }
        return;
    }

    method String digitToString(int digit) {
        var String result;
        let result = String.new(1);
        do result.appendChar(digit + 48); // ASCII value of '0' is 48
        return result;
    }

    method void displayScore() {
        // NOTE: Y dims of game field are: 16 < Ydims < 250
        var int y;
        let y = 13;
        do Screen.drawLine(0, y, 511, y);
        do Screen.drawLine(0, y+1, 511, y+1);
        do Screen.drawLine(0, 255, 511, 255);
        do Screen.drawLine(0, 254, 511, 254);
        do Screen.drawLine(0, 253, 511, 253);

        do Output.moveCursor(0, 0);
        // do Output.printString(scoreMsg);
        do Output.printString("Left ");
        do Output.printString(digitToString(leftScore)); // todo: change to score field
        do Output.printString(" : ");
        do Output.printString(digitToString(rightScore));
        do Output.printString(" Right");
        return;
    }

    method void dispose() {
        do ball.dispose();
        do leftPaddle.dispose();
        do rightPaddle.dispose();
        do Memory.deAlloc(this);
        return;
    }
}